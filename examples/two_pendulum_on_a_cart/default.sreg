 # default regime file that is loaded when the simulation environment starts up
 # use this to create your own files

- Name: test
  clear previous: !!python/bool True # decide whether previous settings should remain or not

  Model:
   type: TwoPendulumModel
   initial state: [0, 0, 0.1, 0, 0, 0]

  Solver:
   type: ODEInt
   measure rate: 500
   step size: 0.001
   end time: 10

  ModelMixer:
   type: AdditiveMixer
   Input A: Controller
   Input B: Feedforward

- Name: p_oo_init_x0_0.5_setpoint_-0.5
  clear previous: !!python/bool True # decide whether previous settings should remain or not

  Model:
   type: TwoPendulumModel
   initial state: [0.5, 0, 0, 0, 0, 0]

  Solver:
   type: ODEInt
   measure rate: 500
   step size: 0.001
   end time: 10

  Controller:
   type: LinearStateFeedback
   poles: [-7.2+0.22j,-7.2-0.22j,-4.2,-3.87,-1.6,-1.27]
   equilibrium: [0, 0, 0, 0, 0, 0]

  Trajectory:
   type: Setpoint
   State: [0]
   Setpoint: [-0.5]

  ModelMixer:
   type: AdditiveMixer
   Input A: Controller
   Input B: Feedforward

- Name: p_oo
  clear previous: !!python/bool True # decide whether previous settings should remain or not

  Model:
   type: TwoPendulumModel
   initial state: [0, 0, 0, 0, 0, 0]

  Solver:
   type: ODEInt
   measure rate: 500
   step size: 0.001
   end time: 10

  Controller:
   type: LinearStateFeedback
   equilibrium: [0, 0, 0, 0, 0, 0]

  Trajectory:
   type: Setpoint
   State: [0]
   Setpoint: [0]

  ModelMixer:
   type: AdditiveMixer
   Input A: Controller
   Input B: Feedforward

- Name: p_uu
  clear previous: !!python/bool True # decide whether previous settings should remain or not

  Model:
   type: TwoPendulumModel
   initial state: [0, 0, 3.141592653589793, 0, 3.141592653589793, 0]

  Solver:
   type: ODEInt
   measure rate: 500
   step size: 0.001
   end time: 10

  Controller:
   type: LinearStateFeedback
   # poles: [-7.2+0.22j,-7.2-0.22j,-4.2,-3.87,-1.6,-1.27]
   # ['-8+7j', '-8-7j', '-5+3j', '-5-3j', '-5+2j', '-5-2j']
   equilibrium: [0, 0, 180, 0, 180, 0]

  Trajectory:
   type: Setpoint
   State: [0]
   Setpoint: [0]

  ModelMixer:
   type: AdditiveMixer
   Input A: Controller
   Input B: Feedforward

- Name: p_ou
  clear previous: !!python/bool True # decide whether previous settings should remain or not

  Model:
   type: TwoPendulumModel
   initial state: [0, 0, 0, 0, 3.141592653589793, 0]

  Solver:
   type: ODEInt
   measure rate: 500
   step size: 0.001
   end time: 10

  Controller:
   type: LinearStateFeedback
   poles: [-8+7j, -8-7j, -5+3j, -5-3j, -5+2j, -5-2j]
   equilibrium: [0, 0, 0, 0, 180, 0]

  Trajectory:
   type: Setpoint
   State: [0]
   Setpoint: [0]

  ModelMixer:
   type: AdditiveMixer
   Input A: Controller
   Input B: Feedforward

- Name: ljapunov
  clear previous: !!python/bool True # decide whether previous settings should remain or not

  Model:
   type: TwoPendulumModel
   initial state: [0, 0, 3.141, 0, 3.299, 0]
   d0: 0
   d1: 0
   d2: 0

  Solver:
   type: ODEInt
   measure rate: 500
   step size: 0.001
   end time: 10

  Controller:
   type: LjapunovController

  Trajectory:
   type: Setpoint
   State: [0]
   Setpoint: [0]

  ModelMixer:
   type: AdditiveMixer
   Input A: Controller
   Input B: Feedforward

- Name: PID
  clear previous: !!python/bool True # decide whether previous settings should remain or not

  Model:
   type: TwoPendulumModel
   initial state: [0.5, 0, 3.141592653589793, 0, 3.141592653589793, 0]

  Solver:
   type: ODEInt
   measure rate: 500
   step size: 0.001
   end time: 10

  Controller:
   type: PIDController
   Kp: 5
   Ki: 0
   Kd: 0
   output_limits: [-200, 200]
   input_state: [0]

  Trajectory:
   type: Setpoint
   State: [0]
   Setpoint: [0]

  ModelMixer:
   type: AdditiveMixer
   Input A: Controller
   Input B: Feedforward

- Name: SwingUp_uo
  clear previous: !!python/bool True # decide whether previous settings should remain or not

  Model:
   type: TwoPendulumModel
   initial state: [0, 0, 3.141592653589793, 0, 3.2986722862692828, 0]
   d0: 0
   d1: 0
   d2: 0

  Solver:
   type: ODEInt
   measure rate: 500
   step size: 0.001
   end time: 10

  Controller:
   type: SwingUpController
   k: 8
   long pendulum: u
   short pendulum: o
   poles: [-10.1, -8.2, -6.9, -5, -2.5, -1.5]

  Trajectory:
   type: Setpoint
   State: [0]
   Setpoint: [0]

  Limiter:
   type: ModelInputLimiter
   Limits: [-15, 15]

  ModelMixer:
   type: AdditiveMixer
   Input A: Controller
   Input B: Feedforward

- Name: SwingUp_ou
  clear previous: !!python/bool True # decide whether previous settings should remain or not

  Model:
   type: TwoPendulumModel
   initial state: [0, 0, 3.2986722862692828, 0, 3.141592653589793, 0]
   d0: 0
   d1: 0
   d2: 0

  Solver:
   type: ODEInt
   measure rate: 500
   step size: 0.001
   end time: 25

  Controller:
   type: SwingUpController
   k: 7
   long pendulum: o
   short pendulum: u
   poles: [-10.1, -8.2, -6.9, -5, -2.5, -1.5]

  Trajectory:
   type: Setpoint
   State: [0]
   Setpoint: [0]

  Limiter:
   type: ModelInputLimiter
   Limits: [-15, 15]

  ModelMixer:
   type: AdditiveMixer
   Input A: Controller
   Input B: Feedforward

- Name: SwingUp_oo
  clear previous: !!python/bool True # decide whether previous settings should remain or not

  Model:
   type: TwoPendulumModel
   initial state: [0, 0, 3.2986722862692828, 0, 3.2986722862692828, 0]
   d0: 0
   d1: 0
   d2: 0

  Solver:
   type: ODEInt
   measure rate: 500
   step size: 0.001
   end time: 25

  Controller:
   type: SwingUpController
   k: 6
   long pendulum: o
   short pendulum: o
   poles: [-10.1, -8.2, -6.9, -5, -2.5, -1.5]

  Trajectory:
   type: Setpoint
   State: [0]
   Setpoint: [0]

  Limiter:
   type: ModelInputLimiter
   Limits: [-15, 15]

  ModelMixer:
   type: AdditiveMixer
   Input A: Controller
   Input B: Feedforward